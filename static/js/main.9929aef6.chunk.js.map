{"version":3,"sources":["components/mbtData.tsx","components/Table.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mbtData","name","number","value","initialSelected","u17","u16","u15","u14","u13","u12","u11","u21","u22","u23","u24","u25","u26","u27","initialValue","Table","useState","checkBox","setCheckBox","selected","setSelected","setValue","data","setData","upperJawHeader","map","i","handleChange","evt","value1","target","useEffect","console","log","className","id","onChange","type","style","width","onClick","array","average","parseFloat","elementIndex","findIndex","e","TableDataView","props","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9929aef6.chunk.js","sourcesContent":["export const mbtData =[\n    {name:\"u17\",number:17,value:1,},\n    {name:\"u16\",number:16,value:0,},\n    {name:\"u15\",number:15,value:0,},\n    {name:\"u14\",number:14,value:0,},\n    {name:\"u13\",number:13,value:0,},\n    {name:\"u12\",number:12,value:0,},\n    {name:\"u11\",number:11,value:0,},\n    {name:\"u21\",number:21,value:0,},\n    {name:\"u22\",number:22,value:0,},\n    {name:\"u23\",number:23,value:0,},\n    {name:\"u24\",number:24,value:0,},\n    {name:\"u25\",number:25,value:0,},\n    {name:\"u26\",number:26,value:0,},\n    {name:\"u27\",number:27,value:0,},\n]","import React, { useState, useEffect } from \"react\";\nimport { mbtData } from \"./mbtData\";\nimport \"./Table.css\";\n\ntype IinitialSelected = {\n  [k: string]: boolean;\n};\n\nconst initialSelected: IinitialSelected = {\n  u17: false,\n  u16: false,\n  u15: false,\n  u14: false,\n  u13: false,\n  u12: false,\n  u11: false,\n  u21: false,\n  u22: false,\n  u23: false,\n  u24: false,\n  u25: false,\n  u26: false,\n  u27: false,\n};\n\ntype IinitialValue = {\n  [k: string]: string;\n};\n\nconst initialValue: IinitialValue = {\n  u17: \"0\",\n  u16: \"0\",\n  u15: \"0\",\n  u14: \"0\",\n  u13: \"0\",\n  u12: \"0\",\n  u11: \"0\",\n  u21: \"0\",\n  u22: \"0\",\n  u23: \"0\",\n  u24: \"0\",\n  u25: \"0\",\n  u26: \"0\",\n  u27: \"0\",\n};\n\nfunction Table() {\n  const [checkBox, setCheckBox] = useState(false);\n  const [selected, setSelected] = useState(initialSelected);\n  const [value, setValue] = useState(initialValue);\n  const [data, setData] = useState([...mbtData]);\n\n  const upperJawHeader = (\n    <>\n      {mbtData.map((data: any, i: number) => {\n        return (\n          <>\n            <th>{data.name}</th>\n          </>\n        );\n      })}\n    </>\n  );\n\n  function handleChange(evt: any) {\n    let value1 = evt.target.value;\n    let name = evt.target.name;\n    setValue({ ...value, [name]: value1 });\n  }\n\n  function handleSubmit() {\n    let array = [...data];\n    for (let i in selected) {\n      if (checkBox) {\n        if (selected[i]) {\n          let average = (parseFloat(value[i]) + 1) / 2;\n          const elementIndex = array.findIndex((e: any) => e.name === i);\n          array[elementIndex] = {\n            ...array[elementIndex],\n            value: average,\n          };\n        }\n      } else {\n        if (selected[i]) {\n          let average = parseFloat(value[i]) / 2;\n          const elementIndex = array.findIndex((e: any) => e.name === i);\n          array[elementIndex] = {\n            ...array[elementIndex],\n            value: average,\n          };\n        }\n      }\n    }\n    console.log(value, \"82\");\n    setData(array);\n    setValue(initialValue);\n    setSelected(initialSelected);\n  }\n\n  useEffect(() => {\n    console.log(value[\"u21\"]);\n    console.log(selected);\n  }, [value, selected]);\n\n  return (\n    <div>\n      <h1>MBT CHART</h1>\n      <table className=\"table table-hover table-bordered\">\n        <thead>\n          <tr>\n          <th></th>{upperJawHeader}</tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Heigth in MM</td>\n            {data.map((data: any, i: number) => {\n              return (\n                <>\n                  {selected[data.name] ? (\n                    <td\n                      // onClick={() => setSelected({...selected,[data.name]:false})}\n                      id={data.id}\n                    >\n                      <input\n                        onChange={handleChange}\n                        type=\"number\"\n                        // value={data.value}\n                        id={data.id}\n                        name={data.name}\n                        style={{width:\"50px\"}}\n                      />\n                    </td>\n                  ) : (\n                    <td\n                      onClick={() =>\n                        setSelected({ ...selected, [data.name]: true })\n                      }\n                      id={data.id}\n                    >\n                      {data.value}\n                    </td>\n                  )}\n                </>\n              );\n            })}\n          </tr>\n        </tbody>\n      </table>\n      <div>\n        <input type=\"checkbox\" onClick={() => setCheckBox(!checkBox)}></input>\n        Open Bite\n      </div>\n\n      <button onClick={handleSubmit}>Generate Chart</button>\n      <table className=\"table table-hover table-bordered\">\n        <thead>\n          <tr>{upperJawHeader}</tr>\n        </thead>\n        <tbody>\n          <tr>\n            {data.map((data: any, i: number) => {\n              return <TableDataView data={data.value} />;\n            })}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n\nfunction TableData(props?: any) {\n  const [inputToggle, setInputToggle] = useState(false);\n\n  function handleOnChange(evt: any) {\n    let value = evt.target.value;\n    let id = evt.target.id;\n  }\n  return (\n    <>\n      {inputToggle ? (\n        <td onClick={() => setInputToggle(true)} id={props.id}>\n          <input onChange={handleOnChange} />\n        </td>\n      ) : (\n        <td onClick={() => setInputToggle(true)} id={props.id}>\n          {props.data}\n        </td>\n      )}\n    </>\n  );\n}\n\nfunction TableDataView(props?: any) {\n  return (\n    <>\n      <td>{props.data}</td>\n    </>\n  );\n}\n","import React from 'react';\n\nimport './App.css';\nimport Table from './components/Table';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Table/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}